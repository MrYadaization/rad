name: Build Linux

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.config.base }}${{ matrix.suffix }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {cxx: "clang++-15", cc: "clang-15", base: "clang"}
          - {cxx: "g++-13", cc: "gcc-13", base: "gcc"}
        suffix: ["", "-onnx"]
    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        env:
          cache-name: rad_deps-linux
        with:
          path: ~/deps
          key: ${{ env.cache-name }}

      - name: Install dependencies
        shell: bash
        env:
          BUILD_TYPE: Release
          CC: gcc-13
          CXX: g++-13
        run: |
          if [ ! -d ~/deps ]; then
            mkdir ~/deps
            git clone https://github.com/marovira/rad_deps.git --branch 2.1.0 --depth 1
            cd ./rad_deps/linux
            tar --use-compress-program=unzstd -xvf onnxruntime.tar.zst -C ~/deps
            tar --use-compress-program=unzstd -xvf opencv.tar.zst -C ~/deps
            tar --use-compress-program=unzstd -xvf TBB.tar.zst -C ~/deps
            cd ../..

            git clone https://github.com/fmtlib/fmt.git --branch 10.2.0 --depth 1
            cmake -S fmt -B fmt/build -DCMAKE_CXX_STANDARD=20 -DFMT_INSTALL=ON -DFMT_TEST=OFF -DCMAKE_INSTALL_PREFIX=~/deps/fmt
            cd ./fmt/build
            make
            make install
            cd ../..
            git clone https://github.com/catchorg/Catch2.git --branch v3.5.1 --depth 1
            cmake -S Catch2 -B Catch2/build -DCMAKE_CXX_STANDARD=20 -DCATCH_INSTALL_DOCS=OFF -DCMAKE_INSTALL_PREFIX=~/deps/Catch2
            cd ./Catch2/build
            make
            make install
          fi

      - name: Build
        shell: bash
        env:
          BUILD_TYPE: Release
          CONFIG_TYPE: ${{ matrix.config.base }}${{ matrix.suffix }}
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          cmake --preset=$CONFIG_TYPE -DBUILD_SHARED_LIBS=OFF -DCMAKE_PREFIX_PATH=~/deps
          cd ./build
          make

      - name: Run tests
        shell: bash
        working-directory: ./build
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          make test
