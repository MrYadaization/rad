name: MSVC

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.clang-format'
      - 'data/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.clang-format'
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "MSVC (default)",
            os: windows-latest,
            build_type: "Release",
            config_name: "msvc",
            cc: "cl",
            cxx: "cl",
          }
        - {
            name: "MSVC (ONNX)",
            os: windows-latest,
            build_type: "Release",
            config_name: "msvc-onnx",
            cc: "cl",
            cxx: "cl",
          }
        - {
            name: "MSVC (ONNX + DML)",
            os: windows-latest,
            build_type: "Release",
            config_name: "msvc-onnx-dml",
            cc: "cl",
            cxx: "cl",
          }
    steps:
      - uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: rad_deps
        with:
          path: C:/deps
          key: ${{ env.cache-name }}-msvc-${{ matrix.config.build_type }}

      - name: Install dependencies
        shell: powershell
        env:
          BUILD_TYPE: ${{ matrix.config.build_type }}
        run: |
          $c="C:/deps"
          if(-not (Test-Path $c))
          {
            git clone https://github.com/marovira/rad_deps.git --branch 2.0.0 --depth 1
            cd ./rad_deps/windows
            Expand-Archive ./onnxruntime.zip -DestinationPath C:/deps
            Expand-Archive ./opencv.zip -DestinationPath C:/deps
            Expand-Archive ./TBB.zip -DestinationPath C:/deps
            cd ../..

            git clone https://github.com/fmtlib/fmt.git --branch 10.1.1 --depth 1
            cmake -G "Visual Studio 17 2022" -S fmt -B fmt/build -DCMAKE_CXX_STANDARD=20 -DFMT_INSTALL=ON -DFMT_TEST=OFF -DCMAKE_INSTALL_PREFIX=C:/deps/fmt
            cd ./fmt/build
            cmake --build . --config $env:BUILD_TYPE
            cmake --build . --target INSTALL --config $env:BUILD_TYPE
            cd ../..

            git clone https://github.com/catchorg/Catch2.git --branch v3.3.2 --depth 1
            cmake -G "Visual Studio 17 2022" -S Catch2 -B Catch2/build -DCMAKE_CXX_STANDARD=20 -DCATCH_INSTALL_DOCS=OFF -DCMAKE_INSTALL_PREFIX=C:/deps/Catch2
            cd ./Catch2/build
            cmake --build . --config $env:BUILD_TYPE
            cmake --build . --target INSTALL --config $env:BUILD_TYPE
            cd ../..
          }

      - name: Build
        shell: powershell
        env:
          BUILD_TYPE: ${{ matrix.config.build_type }}
          CONFIG_TYPE: ${{ matrix.config.config_name}}
        run: |
          cmake --preset=$env:CONFIG_TYPE -DBUILD_SHARED_LIBS=OFF -DCMAKE_PREFIX_PATH=C:/deps
          cd ./build
          cmake --build . --config $env:BUILD_TYPE

      - name: Run tests
        shell: powershell
        working-directory: ./build
        env:
          BUILD_TYPE: ${{ matrix.config.build_type }}
        run: |
          cmake --build . --target RUN_TESTS --config $env:BUILD_TYPE
